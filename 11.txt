#include <stdio.h>
#include <stdlib.h>
#include <time.h>
int count = 0;
void merge(int a[], int low, int mid, int high) {
    int i, j, k;
    int c[10000]; 
    i = low;
    j = mid + 1;
    k = 0;
    while ((i <= mid) && (j <= high)) {
        count++;
        if (a[i] < a[j])
            c[k++] = a[i++];
        else
            c[k++] = a[j++];
    }
    while (i <= mid)
        c[k++] = a[i++];
    while (j <= high)
        c[k++] = a[j++];
    for (i = low, j = 0; j < k; i++, j++)
        a[i] = c[j];
}
void merge_sort(int a[], int low, int high) {
    if (low < high) {
        int mid = (low + high) / 2;
        merge_sort(a, low, mid);
        merge_sort(a, mid + 1, high);
        merge(a, low, mid, high);
    }
}
int main() {
    int a[10000], n, i;
    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);
    if (n > 10000) {
        printf("The array can hold a maximum of 10000 elements.\n");
        return 1;
    }

    printf("All the elements: ");
    srand(time(0));
    for (i = 0; i < n; i++) {
        a[i] = rand();
        printf("%d ", a[i]);
    }
    clock_t start = clock();
    merge_sort(a, 0, n - 1);
    clock_t end = clock();
    double time_taken = ((double)(end - start)) / CLOCKS_PER_SEC;
    printf("\nAfter sorting:\n");
    for (i = 0; i < n; i++)
        printf("%d ", a[i]);
    printf("Time taken to sort %d elements: %f seconds\n", n, time_taken);
    return 0;
}